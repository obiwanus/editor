MINIMUM WHAT NEEDS TO BE DONE:

- Raytrace render from the camera (chalky)
- Split scenes into pieces by vertex connectivity on load (?)
- Move models with or without manipulator
- Read mtl files
- Render from the camera (using mtl)
- nice icons for splitting and removing
- Drawing should be fast


NOW:



BUGS:

- cursor moves when clicking outside of the view area
- cursor setting doesn't work properly in ortho projection


NICE TO HAVE:

- Animation of camera when moving to predefined points


BACKLOG:

- avoid random heap allocations everywhere
- put things we're not going to free in the permanent memory
- thread-safe performance counters
- when selecting models, take the closest one
- properly outline triangles
- try to update before drawing to remove the lag between different areas
- use 2 light sources (maybe even point ones)
- drawing a silhouette of the selected model
- drag models without manipulator
- add the model move manipulator
- move models along the axis using the manipulator
- don't expect obj files to include normals
- clipping
- scene graph - research
- scene graph - implementation
- be able to read scene info
- [linux] fix window performance problems for opengl
- procedural surface generation
- metaballs
- eulerian grid fluid
- [linux] window resize
- don't redraw areas unless something is happening
- fix visible back faces on the cube
- scale and rotate manipulators
- shortcut numpad keys to change orientation
- a panel with buttons to add primitives
- use quaternions for model orientation
- save scenes (and models)
- align buffer width to 4 pixels and use aligned writes
- Warp cursor pointer when rotating
- Fix the blue axis in the corner (they should use their own z-buffer)
- Allocate max size and no more glitches on resize please
- Logging
- don't transform the same vertex several times
- auto code reloading on recompile


idea: try to look at the objects in clip space from different angles

==============================================================================

DONE:

[22/01/2017]
- tidy up rendering code
- fix problems with positioning
- load a reasonably big obj file

[21/01/2017]
- clip text against area bounds
- align text right
- load more than one model from obj file
- display the name of the selected model
- take quads into account when calculating AABB
- don't calculate AABB every frame - only when something changes, e.g. direction
- change the view hotkeys to properly work when pivot is not 0,0,0
- draw quads
- don't expect obj files to always have texture indices

[20/01/2017]
- shortcuts for positioning and projection
- display projection type in the status string
- draw text on editor type selectors
- actually drawing nice pre-rendered cheap strings

[19/01/2017]
- draw nicer and more expensive strings

[18/01/2017]
- z-buffer for new rasterizer
- Count cycles per pixel

[17/01/2017]
- Normalised barycentric coordinates
- Proper masking for the float rasterizer

[16/01/2017]
- testing another rasterizer that uses floats
- completely wrap the simd code to not be confused by the direct use of intrinsics

[12/01/2017 - 15/01/2017]
- experimented with simd

[11/01/2017]
- fixed the subpixel precision in rasterizer

[10/01/2017]
- display min and max for performance counters
- recalculate min and max fps once per several frames
- fix the fonts on windows

[09/01/2017]
- [wip] new rasterizer

[08/01/2017]
- if hit count > 1, accumulate ticks
- draw everything from bottom left

[07/01/2017]
- try not to overallocate pixel buffers (maybe even use only one and avoid copying?)
- basic frustum culling using AABB
- display performance counters

[06/01/2017]
- display fps on linux
- baseline and kerning for strings
- basic alpha blending for fonts

[05/01/2017]
- render a string onto the screen
- displayed a letter on the screen

[04/01/2017]
- debug draw AABBs

[03/01/2017]
- calculating AABBs
- fixed memory leaks
- [linux] capitalize all ASCII symbols from keypresses

[02/01/2017]
- maybe don't add special meaning to keys at the platform layer?
- [linux] try to find a working solution with vsync and glx
- selecting models with mouse click
- insert a cube in the cursor position on button press
- single compilation unit
- debug rays through pixels (set camera to 0 first)

[01/01/2017]
- add cursor
- don't allocate z-buffer each frame
- vary pivot moving speed depending on the distance
- fix stretchy buffer for c++
- custom orientation for models

[31/12/2016]
- each model has its own position/scale
- [fixed] model disappears when changing direction
- more than one model in the scene
- fix the axis icon
- fix the y axis tilting left and right when rotating (annoying!)

[30/12/2016]
- fix the disappearing face at some angles
- move camera base point with shift
- vertical rotation of camera
- use gouraud shading on models (or phong-)
- backface culling for viewing direction (not light)

[29/12/2016]
- fixed a nasty rounding error
- fix occasional gaps between triangles
- fix the shitty drawing of the cube (z-buffer)
- add minimum luminance != 0
- fix ortho projection too
- lerp as a function
- make the grid use z buffer

[28/12/2016]
- fix triangle drawing



